<?php

namespace App\Http\Controllers;

use App\Models\Item;
use Illuminate\Http\Request;

class ItemController extends Controller
{
    public function index(){
        $items = Item::orderBy('id', 'DESC')->paginate(2);
        return view('index', compact('items'));// links() is generated by paginate
    }
    public function create(){
        return view('create');
    }
    public function store(){
        request()->validate([
            'name'=>'required|min:2',
            'image'=>'required|mimes:png,jpg,jpeg'
        ],[
            'name.required'=>'Title is needed, man!',
            'name.min'=>'Name must be at least more than 2 words!',
            'image.required'=>'Image is needed, man!',
            'image.mimes'=>'Choose only image, please!',
        ]);

        if(request()->has('image')){
            $image = request()->file('image');
            $file_name = $image->getClientOriginalName();
            $image->move(public_path('/image'), $file_name);

            $image_path = '/image/'.$file_name;// '/image/$file_name'
        }

        Item::create([
            'name'=>request()->name,
            'image'=>$image_path,
        ]);
        return redirect('/')->with('success', 'Created successfully!');// with keeps session with key and vlaue
    }
    public function edit($id){
        $item = Item::find($id);
        return view('edit', compact('item'));
    }
    public function update($id){
        request()->validate([
            'name'=>'required|min:2',
            'image'=>'mimes:png,jpg,jpeg'
        ],[
            'name.required'=>'Title is needed, man!',
            'name.min'=>'Name must be at least more than 2 words!',
            'image.mimes'=>'Choose only image, please!',  
        ]);

        $item = Item::where('id', $id);

        if(request()->has('image')){
            $image = request()->file('image');
            $name = $image->getClientOriginalName();
            $image->move(public_path('/image'), $name);

            $image_name = '/image/'.$name;
        }else{
            $image_name = $item->first()->image;
        }

        $item->update([
            'name'=>request()->name,
            'image'=>$image_name,
        ]);

        return redirect()->back()->with('success', 'Updated Success');
    }
    public function delete($id){
        Item::where('id', $id)->delete();
        return redirect()->back()->with('success', 'Deleted Success');
    }
}
